priority 1

snippet argparse
declare -r POSITIONAL=()
while [ "$#" -gt 0 ] ; do
  case "\$1" in
    ${1:-e}|${2:--extension})
      ${3:EXTENSION}="\$2"
        shift ; shift
        ;;
    -e=*|--extension=*)
      EXTENSION="${1#*=}"
        shift
        ;;
    --default)
      DEFAULT=YES
        shift
        ;;
    *)
      POSITIONAL+=("\$1")
        shift
        ;;
  esac
done
endsnippet

snippet exportfunc
if ! declare -F ${1:func_name} >/dev/null ; then
  $1() {
    ${2:true}
  }
  export -f $1
else
  echo "Duplicated func definition, ignoring: $1 @${BASH_SOURCE[0]}:${LINENO}"
fi
endsnippet

snippet this_file
resolve_link() {
  local the_link=\$1
  local ls_res=
  local link_target=
  while [ -h "$the_link" ] ; do
    ls_res="$(ls -ld "$the_link")"
    link_target=$(expr "$ls_res" : '.*-> \(.*\)$')
    if [[ "$link_target" =~ ^/ ]] ; then
      the_link="$link_target"
    else
      the_link="$(dirname "$the_link")/$link_target"
    fi
  done
  printf '%s' "$the_link"
}

this_file="${BASH_SOURCE[0]}"
if ! [ -e "$this_file" ] ; then
  this_file="$(type -p "$this_file")"
fi
if ! [ -e "$this_file" ] ; then
  echo "Failed to resolve file."
  exit 1
fi
if ! [[ "$this_file" =~ ^/ ]] ; then
  this_file="$(pwd)/$this_file"
fi
this_file="$(resolve_link "$this_file")"
this_dir="$(dirname "$this_file")"
endsnippet

snippet bash
#!/usr/bin/env bash
set -eu

endsnippet

snippet localtime
`env -i date '+%Y-%m-%dT%H:%M:%S%z'`
endsnippet

snippet utc
`date -u '+%Y-%m-%dT%H:%M:%S%z'`
endsnippet

snippet epoch
`date '+%s'`
endsnippet

snippet utcAndEpoch
`date -u '+%Y-%m-%dT%H:%M:%S%z'`
`date '+%s'`
endsnippet
